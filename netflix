{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h1>Assignment 2 (Part 1) <h1>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Assignment instructions</h3>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* **How to install 'otter'**: Run `pip install otter-grader` in your Anaconda Command Prompt\n",
    "* **Otter**: It is an autograder that we will be using for grading your notebooks.\n",
    "* **grader.check('qn')**: This command runs test cases for nth question `qn` provided to you and displays the result. But these are not the only test cases, these are provided just for your basic testing. There will be some *hidden test cases* on which your answers will be tested as well.\n",
    "* You are **not** allowed to edit any pre-defined variables and as per the instructions for every question you have to assign your answers to these variables.\n",
    "* Write your answers in place of `...`"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<h3>Submission instructions</h3>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "* There are two parts of this assignment. You should name both notebooks as **YourRollNumber_PartNumber.ipynb**. (e.g. this part should be named as *`2XXXXXXX_1.ipynb`*).\n",
    "* You must submit a zip file containg just two notebooks and it must not has any folder or any other file. \n",
    "* The name of the zip file must be your `RollNumber_PA2`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Please run this cell to configure otter grader\n",
    "import otter\n",
    "grader = otter.Notebook()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Please run the cell below to perfrom all the necessary imports\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this Assignment we will focus more on data cleaning and generating appropriate visualizations from the `neflix_tiltes1` dataset. <br/>\n",
    "So after completing this part of the assignment you might be able to generate useful information from any given dataset."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Please use the cell below to import the dataset into the variable `netflixDataset`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>tyPe</th>\n",
       "      <th>title</th>\n",
       "      <th>director!!!</th>\n",
       "      <th>cAst</th>\n",
       "      <th>countRy</th>\n",
       "      <th>daTe_adDed</th>\n",
       "      <th>rElese_year</th>\n",
       "      <th>ratIng</th>\n",
       "      <th>duratOn</th>\n",
       "      <th>listEd_In</th>\n",
       "      <th>desCripTion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>s1</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson!!!</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 25, 2021</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>s2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>s3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq!!!</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>s4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>s5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8802</th>\n",
       "      <td>s8803</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher!!!</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8803</th>\n",
       "      <td>s8804</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Zombie Dumb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>July 1, 2019</td>\n",
       "      <td>2018</td>\n",
       "      <td>TV-Y7</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>Kids' TV, Korean TV Shows, TV Comedies</td>\n",
       "      <td>While living alone in a spooky town, a young g...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8804</th>\n",
       "      <td>s8805</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer!!!</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8805</th>\n",
       "      <td>s8806</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt!!!</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n", 
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8806</th>\n",
       "      <td>s8807</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh!!!</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8807 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     show_id     tyPe                  title         director!!!  \\\n",
       "0         s1    Movie   Dick Johnson Is Dead  Kirsten Johnson!!!   \n",
       "1         s2  TV Show          Blood & Water                 NaN   \n",
       "2         s3  TV Show              Ganglands  Julien Leclercq!!!   \n",
       "3         s4  TV Show  Jailbirds New Orleans                 NaN   \n",
       "4         s5  TV Show           Kota Factory                 NaN   \n",
       "...      ...      ...                    ...                 ...   \n",
       "8802   s8803    Movie                 Zodiac    David Fincher!!!   \n",
       "8803   s8804  TV Show            Zombie Dumb                 NaN   \n",
       "8804   s8805    Movie             Zombieland  Ruben Fleischer!!!   \n",
       "8805   s8806    Movie                   Zoom     Peter Hewitt!!!   \n",
       "8806   s8807    Movie                 Zubaan      Mozez Singh!!!   \n",
       "\n",
       "                                                   cAst        countRy  \\\n",
       "0                                                   NaN  United States   \n",
       "1     Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n",
       "2     Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...            NaN   \n",
       "3                                                   NaN            NaN   \n",
       "4     Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          India   \n",
       "...                                                 ...            ...   \n",
       "8802  Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...  United States   \n",
       "8803                                                NaN            NaN   \n",
       "8804  Jesse Eisenberg, Woody Harrelson, Emma Stone, ...  United States   \n",
       "8805  Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...  United States   \n",
       "8806  Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...          India   \n",
       "\n",
       "              daTe_adDed  rElese_year ratIng    duratOn  \\\n",
       "0     September 25, 2021         2020  PG-13     90 min   \n",
       "1     September 24, 2021         2021  TV-MA  2 Seasons   \n",
       "2     September 24, 2021         2021  TV-MA   1 Season   \n",
       "3     September 24, 2021         2021  TV-MA   1 Season   \n",
       "4     September 24, 2021         2021  TV-MA  2 Seasons   \n",
       "...                  ...          ...    ...        ...   \n",
       "8802   November 20, 2019         2007      R    158 min   \n",
       "8803        July 1, 2019         2018  TV-Y7  2 Seasons   \n",
       "8804    November 1, 2019         2009      R     88 min   \n",
       "8805    January 11, 2020         2006     PG     88 min   \n",
       "8806       March 2, 2019         2015  TV-14    111 min   \n",
       "\n",
       "                                              listEd_In  \\\n",
       "0                                         Documentaries   \n",
       "1       International TV Shows, TV Dramas, TV Mysteries   \n",
       "2     Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                                Docuseries, Reality TV   \n",
       "4     International TV Shows, Romantic TV Shows, TV ...   \n",
       "...                                                 ...   \n",
       "8802                     Cult Movies, Dramas, Thrillers   \n",
       "8803             Kids' TV, Korean TV Shows, TV Comedies   \n",
       "8804                            Comedies, Horror Movies   \n",
       "8805                 Children & Family Movies, Comedies   \n",
       "8806     Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                            desCripTion  \n",
       "0     As her father nears the end of his life, filmm...  \n",
       "1     After crossing paths at a party, a Cape Town t...  \n",
       "2     To protect his family from a powerful drug lor...  \n",
       "3     Feuds, flirtations and toilet talk go down amo...  \n",
       "4     In a city of coaching centers known to train I...  \n",
       "...                                                 ...  \n",
       "8802  A political cartoonist, a crime reporter and a...  \n",
       "8803  While living alone in a spooky town, a young g...  \n",
       "8804  Looking to survive in a world taken over by zo...  \n",
       "8805  Dragged from civilian life, a former superhero...  \n",
       "8806  A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[8807 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Use this cell to familiarize yourself with the dataset such as the shape of the dataset and the columns\n",
    "netflixDataset = pd.read_csv(\"netflix_titles1.csv\")\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "**Question 1 :** What is the granularity of the data (i.e. what does each row represent)?\n",
    "\n",
    "*Answering Guidelines:* a placeholder for your answer has been made - simply add your answer in the markdown cell below as instructed."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each row represents a TV show or movie available on Netflix."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 2A :** Remove the word `s` from each entry of the column `show_id` and convert each entry into `int` datatype.<br/> You are to reflect the changes inside the same variable i.e `netflixDataset`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>show_id</th>\n",
       "      <th>tyPe</th>\n",
       "      <th>title</th>\n",
       "      <th>director!!!</th>\n",
       "      <th>cAst</th>\n",
       "      <th>countRy</th>\n",
       "      <th>daTe_adDed</th>\n",
       "      <th>rElese_year</th>\n",
       "      <th>ratIng</th>\n",
       "      <th>duratOn</th>\n",
       "      <th>listEd_In</th>\n",
       "      <th>desCripTion</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson!!!</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 25, 2021</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq!!!</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8802</th>\n",
       "      <td>8803</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher!!!</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8803</th>\n",
       "      <td>8804</td>\n",
       "      <td>TV Show</td>\n",
       "      <td>Zombie Dumb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>July 1, 2019</td>\n",
       "      <td>2018</td>\n",
       "      <td>TV-Y7</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>Kids' TV, Korean TV Shows, TV Comedies</td>\n",
       "      <td>While living alone in a spooky town, a young g...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8804</th>\n",
       "      <td>8805</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer!!!</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8805</th>\n",
       "      <td>8806</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt!!!</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8806</th>\n",
       "      <td>8807</td>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh!!!</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8807 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      show_id     tyPe                  title         director!!!  \\\n",
       "0           1    Movie   Dick Johnson Is Dead  Kirsten Johnson!!!   \n",
       "1           2  TV Show          Blood & Water                 NaN   \n",
       "2           3  TV Show              Ganglands  Julien Leclercq!!!   \n",
       "3           4  TV Show  Jailbirds New Orleans                 NaN   \n",
       "4           5  TV Show           Kota Factory                 NaN   \n",
       "...       ...      ...                    ...                 ...   \n",
       "8802     8803    Movie                 Zodiac    David Fincher!!!   \n",
       "8803     8804  TV Show            Zombie Dumb                 NaN   \n",
       "8804     8805    Movie             Zombieland  Ruben Fleischer!!!   \n",
       "8805     8806    Movie                   Zoom     Peter Hewitt!!!   \n",
       "8806     8807    Movie                 Zubaan      Mozez Singh!!!   \n",
       "\n",
       "                                                   cAst        countRy  \\\n",
       "0                                                   NaN  United States   \n",
       "1     Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n",
       "2     Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...            NaN   \n",
       "3                                                   NaN            NaN   \n",
       "4     Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          India   \n",
       "...                                                 ...            ...   \n",
       "8802  Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...  United States   \n",
       "8803                                                NaN            NaN   \n",
       "8804  Jesse Eisenberg, Woody Harrelson, Emma Stone, ...  United States   \n",
       "8805  Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...  United States   \n",
       "8806  Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...          India   \n",
       "\n",
       "              daTe_adDed  rElese_year ratIng    duratOn  \\\n",
       "0     September 25, 2021         2020  PG-13     90 min   \n",
       "1     September 24, 2021         2021  TV-MA  2 Seasons   \n",
       "2     September 24, 2021         2021  TV-MA   1 Season   \n",
       "3     September 24, 2021         2021  TV-MA   1 Season   \n",
       "4     September 24, 2021         2021  TV-MA  2 Seasons   \n",
       "...                  ...          ...    ...        ...   \n",
       "8802   November 20, 2019         2007      R    158 min   \n",
       "8803        July 1, 2019         2018  TV-Y7  2 Seasons   \n",
       "8804    November 1, 2019         2009      R     88 min   \n",
       "8805    January 11, 2020         2006     PG     88 min   \n",
       "8806       March 2, 2019         2015  TV-14    111 min   \n",
       "\n",
       "                                              listEd_In  \\\n",
       "0                                         Documentaries   \n",
       "1       International TV Shows, TV Dramas, TV Mysteries   \n",
       "2     Crime TV Shows, International TV Shows, TV Act...   \n",
       "3                                Docuseries, Reality TV   \n",
       "4     International TV Shows, Romantic TV Shows, TV ...   \n",
       "...                                                 ...   \n",
       "8802                     Cult Movies, Dramas, Thrillers   \n",
       "8803             Kids' TV, Korean TV Shows, TV Comedies   \n",
       "8804                            Comedies, Horror Movies   \n",
       "8805                 Children & Family Movies, Comedies   \n",
       "8806     Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                            desCripTion  \n",
       "0     As her father nears the end of his life, filmm...  \n",
       "1     After crossing paths at a party, a Cape Town t...  \n",
       "2     To protect his family from a powerful drug lor...  \n",
       "3     Feuds, flirtations and toilet talk go down amo...  \n",
       "4     In a city of coaching centers known to train I...  \n",
       "...                                                 ...  \n",
       "8802  A political cartoonist, a crime reporter and a...  \n",
       "8803  While living alone in a spooky town, a young g...  \n",
       "8804  Looking to survive in a world taken over by zo...  \n",
       "8805  Dragged from civilian life, a former superhero...  \n",
       "8806  A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[8807 rows x 12 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset[\"show_id\"] = netflixDataset[\"show_id\"].str.replace(\"s\", \"\")\n",
    "netflixDataset[\"show_id\"] = netflixDataset[\"show_id\"].astype(\"int\")\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q2A</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q2A results: All test cases passed!"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check('Q2A')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 2B :** Make `show_id` the index for the dataframe and the changes must persist in the variable `netflixDataset`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tyPe</th>\n",
       "      <th>title</th>\n",
       "      <th>director!!!</th>\n",
       "      <th>cAst</th>\n",
       "      <th>countRy</th>\n",
       "      <th>daTe_adDed</th>\n",
       "      <th>rElese_year</th>\n",
       "      <th>ratIng</th>\n",
       "      <th>duratOn</th>\n",
       "      <th>listEd_In</th>\n",
       "      <th>desCripTion</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>show_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Dick Johnson Is Dead</td>\n",
       "      <td>Kirsten Johnson!!!</td>\n",
       "      <td>NaN</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 25, 2021</td>\n",
       "      <td>2020</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>90 min</td>\n",
       "      <td>Documentaries</td>\n",
       "      <td>As her father nears the end of his life, filmm...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>Blood &amp; Water</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, TV Dramas, TV Mysteries</td>\n",
       "      <td>After crossing paths at a party, a Cape Town t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>Ganglands</td>\n",
       "      <td>Julien Leclercq!!!</td>\n",
       "      <td>Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Crime TV Shows, International TV Shows, TV Act...</td>\n",
       "      <td>To protect his family from a powerful drug lor...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>Jailbirds New Orleans</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>1 Season</td>\n",
       "      <td>Docuseries, Reality TV</td>\n",
       "      <td>Feuds, flirtations and toilet talk go down amo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>Kota Factory</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>International TV Shows, Romantic TV Shows, TV ...</td>\n",
       "      <td>In a city of coaching centers known to train I...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8803</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher!!!</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8804</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>Zombie Dumb</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>July 1, 2019</td>\n",
       "      <td>2018</td>\n",
       "      <td>TV-Y7</td>\n",
       "      <td>2 Seasons</td>\n",
       "      <td>Kids' TV, Korean TV Shows, TV Comedies</td>\n",
       "      <td>While living alone in a spooky town, a young g...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8805</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer!!!</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8806</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt!!!</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8807</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh!!!</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8807 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            tyPe                  title         director!!!  \\\n",
       "show_id                                                       \n",
       "1          Movie   Dick Johnson Is Dead  Kirsten Johnson!!!   \n",
       "2        TV Show          Blood & Water                 NaN   \n",
       "3        TV Show              Ganglands  Julien Leclercq!!!   \n",
       "4        TV Show  Jailbirds New Orleans                 NaN   \n",
       "5        TV Show           Kota Factory                 NaN   \n",
       "...          ...                    ...                 ...   \n",
       "8803       Movie                 Zodiac    David Fincher!!!   \n",
       "8804     TV Show            Zombie Dumb                 NaN   \n",
       "8805       Movie             Zombieland  Ruben Fleischer!!!   \n",
       "8806       Movie                   Zoom     Peter Hewitt!!!   \n",
       "8807       Movie                 Zubaan      Mozez Singh!!!   \n",
       "\n",
       "                                                      cAst        countRy  \\\n",
       "show_id                                                                     \n",
       "1                                                      NaN  United States   \n",
       "2        Ama Qamata, Khosi Ngema, Gail Mabalane, Thaban...   South Africa   \n",
       "3        Sami Bouajila, Tracy Gotoas, Samuel Jouy, Nabi...            NaN   \n",
       "4                                                      NaN            NaN   \n",
       "5        Mayur More, Jitendra Kumar, Ranjan Raj, Alam K...          India   \n",
       "...                                                    ...            ...   \n",
       "8803     Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...  United States   \n",
       "8804                                                   NaN            NaN   \n",
       "8805     Jesse Eisenberg, Woody Harrelson, Emma Stone, ...  United States   \n",
       "8806     Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...  United States   \n",
       "8807     Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...          India   \n",
       "\n",
       "                 daTe_adDed  rElese_year ratIng    duratOn  \\\n",
       "show_id                                                      \n",
       "1        September 25, 2021         2020  PG-13     90 min   \n",
       "2        September 24, 2021         2021  TV-MA  2 Seasons   \n",
       "3        September 24, 2021         2021  TV-MA   1 Season   \n",
       "4        September 24, 2021         2021  TV-MA   1 Season   \n",
       "5        September 24, 2021         2021  TV-MA  2 Seasons   \n",
       "...                     ...          ...    ...        ...   \n",
       "8803      November 20, 2019         2007      R    158 min   \n",
       "8804           July 1, 2019         2018  TV-Y7  2 Seasons   \n",
       "8805       November 1, 2019         2009      R     88 min   \n",
       "8806       January 11, 2020         2006     PG     88 min   \n",
       "8807          March 2, 2019         2015  TV-14    111 min   \n",
       "\n",
       "                                                 listEd_In  \\\n",
       "show_id                                                      \n",
       "1                                            Documentaries   \n",
       "2          International TV Shows, TV Dramas, TV Mysteries   \n",
       "3        Crime TV Shows, International TV Shows, TV Act...   \n",
       "4                                   Docuseries, Reality TV   \n",
       "5        International TV Shows, Romantic TV Shows, TV ...   \n",
       "...                                                    ...   \n",
       "8803                        Cult Movies, Dramas, Thrillers   \n",
       "8804                Kids' TV, Korean TV Shows, TV Comedies   \n",
       "8805                               Comedies, Horror Movies   \n",
       "8806                    Children & Family Movies, Comedies   \n",
       "8807        Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                               desCripTion  \n",
       "show_id                                                     \n",
       "1        As her father nears the end of his life, filmm...  \n",
       "2        After crossing paths at a party, a Cape Town t...  \n",
       "3        To protect his family from a powerful drug lor...  \n",
       "4        Feuds, flirtations and toilet talk go down amo...  \n",
       "5        In a city of coaching centers known to train I...  \n",
       "...                                                    ...  \n",
       "8803     A political cartoonist, a crime reporter and a...  \n",
       "8804     While living alone in a spooky town, a young g...  \n",
       "8805     Looking to survive in a world taken over by zo...  \n",
       "8806     Dragged from civilian life, a former superhero...  \n",
       "8807     A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[8807 rows x 11 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset.set_index(\"show_id\", inplace=True)\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q2B</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q2B results: All test cases passed!"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check('Q2B')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 3 :** Check for null values in the dataframe and if they persist drop the null values accordingly.<br/>\n",
    "Your final answer must be present in the variable `netflixDataset`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tyPe</th>\n",
       "      <th>title</th>\n",
       "      <th>director!!!</th>\n",
       "      <th>cAst</th>\n",
       "      <th>countRy</th>\n",
       "      <th>daTe_adDed</th>\n",
       "      <th>rElese_year</th>\n",
       "      <th>ratIng</th>\n",
       "      <th>duratOn</th>\n",
       "      <th>listEd_In</th>\n",
       "      <th>desCripTion</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>show_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Sankofa</td>\n",
       "      <td>Haile Gerima!!!</td>\n",
       "      <td>Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...</td>\n",
       "      <td>United States, Ghana, Burkina Faso, United Kin...</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>1993</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>125 min</td>\n",
       "      <td>Dramas, Independent Movies, International Movies</td>\n",
       "      <td>On a photo shoot in Ghana, an American model s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>The Great British Baking Show</td>\n",
       "      <td>Andy Devonshire!!!</td>\n",
       "      <td>Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>9 Seasons</td>\n",
       "      <td>British TV Shows, Reality TV</td>\n",
       "      <td>A talented batch of amateur bakers face off in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Movie</td>\n",
       "      <td>The Starling</td>\n",
       "      <td>Theodore Melfi!!!</td>\n",
       "      <td>Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>104 min</td>\n",
       "      <td>Comedies, Dramas</td>\n",
       "      <td>A woman adjusting to life after a loss contend...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Je Suis Karl</td>\n",
       "      <td>Christian Schwochow!!!</td>\n",
       "      <td>Luna Wedler, Jannis Niewöhner, Milan Peschel, ...</td>\n",
       "      <td>Germany, Czech Republic</td>\n",
       "      <td>September 23, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>127 min</td>\n",
       "      <td>Dramas, International Movies</td>\n",
       "      <td>After most of her family is murdered in a terr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Jeans</td>\n",
       "      <td>S. Shankar!!!</td>\n",
       "      <td>Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 21, 2021</td>\n",
       "      <td>1998</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>166 min</td>\n",
       "      <td>Comedies, International Movies, Romantic Movies</td>\n",
       "      <td>When the father of the man she loves insists t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8802</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zinzana</td>\n",
       "      <td>Majid Al Ansari!!!</td>\n",
       "      <td>Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...</td>\n",
       "      <td>United Arab Emirates, Jordan</td>\n",
       "      <td>March 9, 2016</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>96 min</td>\n",
       "      <td>Dramas, International Movies, Thrillers</td>\n",
       "      <td>Recovering alcoholic Talal wakes up inside a s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8803</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher!!!</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8805</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer!!!</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8806</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt!!!</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8807</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh!!!</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5332 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            tyPe                          title             director!!!  \\\n",
       "show_id                                                                   \n",
       "8          Movie                        Sankofa         Haile Gerima!!!   \n",
       "9        TV Show  The Great British Baking Show      Andy Devonshire!!!   \n",
       "10         Movie                   The Starling       Theodore Melfi!!!   \n",
       "13         Movie                   Je Suis Karl  Christian Schwochow!!!   \n",
       "25         Movie                          Jeans           S. Shankar!!!   \n",
       "...          ...                            ...                     ...   \n",
       "8802       Movie                        Zinzana      Majid Al Ansari!!!   \n",
       "8803       Movie                         Zodiac        David Fincher!!!   \n",
       "8805       Movie                     Zombieland      Ruben Fleischer!!!   \n",
       "8806       Movie                           Zoom         Peter Hewitt!!!   \n",
       "8807       Movie                         Zubaan          Mozez Singh!!!   \n",
       "\n",
       "                                                      cAst  \\\n",
       "show_id                                                      \n",
       "8        Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...   \n",
       "9        Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...   \n",
       "10       Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...   \n",
       "13       Luna Wedler, Jannis Niewöhner, Milan Peschel, ...   \n",
       "25       Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...   \n",
       "...                                                    ...   \n",
       "8802     Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...   \n",
       "8803     Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...   \n",
       "8805     Jesse Eisenberg, Woody Harrelson, Emma Stone, ...   \n",
       "8806     Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...   \n",
       "8807     Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...   \n",
       "\n",
       "                                                   countRy  \\\n",
       "show_id                                                      \n",
       "8        United States, Ghana, Burkina Faso, United Kin...   \n",
       "9                                           United Kingdom   \n",
       "10                                           United States   \n",
       "13                                 Germany, Czech Republic   \n",
       "25                                                   India   \n",
       "...                                                    ...   \n",
       "8802                          United Arab Emirates, Jordan   \n",
       "8803                                         United States   \n",
       "8805                                         United States   \n",
       "8806                                         United States   \n",
       "8807                                                 India   \n",
       "\n",
       "                 daTe_adDed  rElese_year ratIng    duratOn  \\\n",
       "show_id                                                      \n",
       "8        September 24, 2021         1993  TV-MA    125 min   \n",
       "9        September 24, 2021         2021  TV-14  9 Seasons   \n",
       "10       September 24, 2021         2021  PG-13    104 min   \n",
       "13       September 23, 2021         2021  TV-MA    127 min   \n",
       "25       September 21, 2021         1998  TV-14    166 min   \n",
       "...                     ...          ...    ...        ...   \n",
       "8802          March 9, 2016         2015  TV-MA     96 min   \n",
       "8803      November 20, 2019         2007      R    158 min   \n",
       "8805       November 1, 2019         2009      R     88 min   \n",
       "8806       January 11, 2020         2006     PG     88 min   \n",
       "8807          March 2, 2019         2015  TV-14    111 min   \n",
       "\n",
       "                                                listEd_In  \\\n",
       "show_id                                                     \n",
       "8        Dramas, Independent Movies, International Movies   \n",
       "9                            British TV Shows, Reality TV   \n",
       "10                                       Comedies, Dramas   \n",
       "13                           Dramas, International Movies   \n",
       "25        Comedies, International Movies, Romantic Movies   \n",
       "...                                                   ...   \n",
       "8802              Dramas, International Movies, Thrillers   \n",
       "8803                       Cult Movies, Dramas, Thrillers   \n",
       "8805                              Comedies, Horror Movies   \n",
       "8806                   Children & Family Movies, Comedies   \n",
       "8807       Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                               desCripTion  \n",
       "show_id                                                     \n",
       "8        On a photo shoot in Ghana, an American model s...  \n",
       "9        A talented batch of amateur bakers face off in...  \n",
       "10       A woman adjusting to life after a loss contend...  \n",
       "13       After most of her family is murdered in a terr...  \n",
       "25       When the father of the man she loves insists t...  \n",
       "...                                                    ...  \n",
       "8802     Recovering alcoholic Talal wakes up inside a s...  \n",
       "8803     A political cartoonist, a crime reporter and a...  \n",
       "8805     Looking to survive in a world taken over by zo...  \n",
       "8806     Dragged from civilian life, a former superhero...  \n",
       "8807     A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[5332 rows x 11 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset.dropna(inplace=True)\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q3</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q3 results: All test cases passed!"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q3\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 4 :** As you can see above that after you have dropped the null values from the dataset the index `show_id` is now distorted.<br/>\n",
    "Write a code snippet in the cell below that will reset the index and start it from 1 onwards till the length of the dataframe.<br/>\n",
    "Rename the new index as \"Show ID\" and the changes must persist in the variable `netflixDataset`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>tyPe</th>\n",
       "      <th>title</th>\n",
       "      <th>director!!!</th>\n",
       "      <th>cAst</th>\n",
       "      <th>countRy</th>\n",
       "      <th>daTe_adDed</th>\n",
       "      <th>rElese_year</th>\n",
       "      <th>ratIng</th>\n",
       "      <th>duratOn</th>\n",
       "      <th>listEd_In</th>\n",
       "      <th>desCripTion</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Show ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Sankofa</td>\n",
       "      <td>Haile Gerima!!!</td>\n",
       "      <td>Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...</td>\n",
       "      <td>United States, Ghana, Burkina Faso, United Kin...</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>1993</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>125 min</td>\n",
       "      <td>Dramas, Independent Movies, International Movies</td>\n",
       "      <td>On a photo shoot in Ghana, an American model s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>The Great British Baking Show</td>\n",
       "      <td>Andy Devonshire!!!</td>\n",
       "      <td>Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>9 Seasons</td>\n",
       "      <td>British TV Shows, Reality TV</td>\n",
       "      <td>A talented batch of amateur bakers face off in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Movie</td>\n",
       "      <td>The Starling</td>\n",
       "      <td>Theodore Melfi!!!</td>\n",
       "      <td>Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>104 min</td>\n",
       "      <td>Comedies, Dramas</td>\n",
       "      <td>A woman adjusting to life after a loss contend...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Je Suis Karl</td>\n",
       "      <td>Christian Schwochow!!!</td>\n",
       "      <td>Luna Wedler, Jannis Niewöhner, Milan Peschel, ...</td>\n",
       "      <td>Germany, Czech Republic</td>\n",
       "      <td>September 23, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>127 min</td>\n",
       "      <td>Dramas, International Movies</td>\n",
       "      <td>After most of her family is murdered in a terr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Jeans</td>\n",
       "      <td>S. Shankar!!!</td>\n",
       "      <td>Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 21, 2021</td>\n",
       "      <td>1998</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>166 min</td>\n",
       "      <td>Comedies, International Movies, Romantic Movies</td>\n",
       "      <td>When the father of the man she loves insists t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5328</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zinzana</td>\n",
       "      <td>Majid Al Ansari!!!</td>\n",
       "      <td>Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...</td>\n",
       "      <td>United Arab Emirates, Jordan</td>\n",
       "      <td>March 9, 2016</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>96 min</td>\n",
       "      <td>Dramas, International Movies, Thrillers</td>\n",
       "      <td>Recovering alcoholic Talal wakes up inside a s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5329</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher!!!</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5330</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer!!!</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5331</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt!!!</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5332</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh!!!</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5332 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            tyPe                          title             director!!!  \\\n",
       "Show ID                                                                   \n",
       "1          Movie                        Sankofa         Haile Gerima!!!   \n",
       "2        TV Show  The Great British Baking Show      Andy Devonshire!!!   \n",
       "3          Movie                   The Starling       Theodore Melfi!!!   \n",
       "4          Movie                   Je Suis Karl  Christian Schwochow!!!   \n",
       "5          Movie                          Jeans           S. Shankar!!!   \n",
       "...          ...                            ...                     ...   \n",
       "5328       Movie                        Zinzana      Majid Al Ansari!!!   \n",
       "5329       Movie                         Zodiac        David Fincher!!!   \n",
       "5330       Movie                     Zombieland      Ruben Fleischer!!!   \n",
       "5331       Movie                           Zoom         Peter Hewitt!!!   \n",
       "5332       Movie                         Zubaan          Mozez Singh!!!   \n",
       "\n",
       "                                                      cAst  \\\n",
       "Show ID                                                      \n",
       "1        Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...   \n",
       "2        Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...   \n",
       "3        Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...   \n",
       "4        Luna Wedler, Jannis Niewöhner, Milan Peschel, ...   \n",
       "5        Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...   \n",
       "...                                                    ...   \n",
       "5328     Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...   \n",
       "5329     Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...   \n",
       "5330     Jesse Eisenberg, Woody Harrelson, Emma Stone, ...   \n",
       "5331     Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...   \n",
       "5332     Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...   \n",
       "\n",
       "                                                   countRy  \\\n",
       "Show ID                                                      \n",
       "1        United States, Ghana, Burkina Faso, United Kin...   \n",
       "2                                           United Kingdom   \n",
       "3                                            United States   \n",
       "4                                  Germany, Czech Republic   \n",
       "5                                                    India   \n",
       "...                                                    ...   \n",
       "5328                          United Arab Emirates, Jordan   \n",
       "5329                                         United States   \n",
       "5330                                         United States   \n",
       "5331                                         United States   \n",
       "5332                                                 India   \n",
       "\n",
       "                 daTe_adDed  rElese_year ratIng    duratOn  \\\n",
       "Show ID                                                      \n",
       "1        September 24, 2021         1993  TV-MA    125 min   \n",
       "2        September 24, 2021         2021  TV-14  9 Seasons   \n",
       "3        September 24, 2021         2021  PG-13    104 min   \n",
       "4        September 23, 2021         2021  TV-MA    127 min   \n",
       "5        September 21, 2021         1998  TV-14    166 min   \n",
       "...                     ...          ...    ...        ...   \n",
       "5328          March 9, 2016         2015  TV-MA     96 min   \n",
       "5329      November 20, 2019         2007      R    158 min   \n",
       "5330       November 1, 2019         2009      R     88 min   \n",
       "5331       January 11, 2020         2006     PG     88 min   \n",
       "5332          March 2, 2019         2015  TV-14    111 min   \n",
       "\n",
       "                                                listEd_In  \\\n",
       "Show ID                                                     \n",
       "1        Dramas, Independent Movies, International Movies   \n",
       "2                            British TV Shows, Reality TV   \n",
       "3                                        Comedies, Dramas   \n",
       "4                            Dramas, International Movies   \n",
       "5         Comedies, International Movies, Romantic Movies   \n",
       "...                                                   ...   \n",
       "5328              Dramas, International Movies, Thrillers   \n",
       "5329                       Cult Movies, Dramas, Thrillers   \n",
       "5330                              Comedies, Horror Movies   \n",
       "5331                   Children & Family Movies, Comedies   \n",
       "5332       Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                               desCripTion  \n",
       "Show ID                                                     \n",
       "1        On a photo shoot in Ghana, an American model s...  \n",
       "2        A talented batch of amateur bakers face off in...  \n",
       "3        A woman adjusting to life after a loss contend...  \n",
       "4        After most of her family is murdered in a terr...  \n",
       "5        When the father of the man she loves insists t...  \n",
       "...                                                    ...  \n",
       "5328     Recovering alcoholic Talal wakes up inside a s...  \n",
       "5329     A political cartoonist, a crime reporter and a...  \n",
       "5330     Looking to survive in a world taken over by zo...  \n",
       "5331     Dragged from civilian life, a former superhero...  \n",
       "5332     A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[5332 rows x 11 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset.reset_index(drop=True, inplace=True)\n",
    "netflixDataset.index += 1\n",
    "netflixDataset.index.set_names([\"Show ID\"], inplace=True)\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q4</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q4 results: All test cases passed!"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q4\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 5 :** It is always good to have short, representative names of the columns in your dataset. Please rename the columns in such a way that they fulfill the following conditions:\n",
    "<ul>\n",
    "<li>Each column name must start with a capital letter and there must not be any capital letters in the middle or even at the end.</li>\n",
    "<li>There should be no punctuation marks in each of the column names.</li>\n",
    "<li>None of the column names must be mispelled.</li>\n",
    "</ul>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Title</th>\n",
       "      <th>Director</th>\n",
       "      <th>Cast</th>\n",
       "      <th>Country</th>\n",
       "      <th>Date_added</th>\n",
       "      <th>Release_year</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Duration</th>\n",
       "      <th>Listed_in</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Show ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Sankofa</td>\n",
       "      <td>Haile Gerima!!!</td>\n",
       "      <td>Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...</td>\n",
       "      <td>United States, Ghana, Burkina Faso, United Kin...</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>1993</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>125 min</td>\n",
       "      <td>Dramas, Independent Movies, International Movies</td>\n",
       "      <td>On a photo shoot in Ghana, an American model s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>The Great British Baking Show</td>\n",
       "      <td>Andy Devonshire!!!</td>\n",
       "      <td>Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>9 Seasons</td>\n",
       "      <td>British TV Shows, Reality TV</td>\n",
       "      <td>A talented batch of amateur bakers face off in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Movie</td>\n",
       "      <td>The Starling</td>\n",
       "      <td>Theodore Melfi!!!</td>\n",
       "      <td>Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>104 min</td>\n",
       "      <td>Comedies, Dramas</td>\n",
       "      <td>A woman adjusting to life after a loss contend...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Je Suis Karl</td>\n",
       "      <td>Christian Schwochow!!!</td>\n",
       "      <td>Luna Wedler, Jannis Niewöhner, Milan Peschel, ...</td>\n",
       "      <td>Germany, Czech Republic</td>\n",
       "      <td>September 23, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>127 min</td>\n",
       "      <td>Dramas, International Movies</td>\n",
       "      <td>After most of her family is murdered in a terr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Jeans</td>\n",
       "      <td>S. Shankar!!!</td>\n",
       "      <td>Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 21, 2021</td>\n",
       "      <td>1998</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>166 min</td>\n",
       "      <td>Comedies, International Movies, Romantic Movies</td>\n",
       "      <td>When the father of the man she loves insists t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5328</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zinzana</td>\n",
       "      <td>Majid Al Ansari!!!</td>\n",
       "      <td>Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...</td>\n",
       "      <td>United Arab Emirates, Jordan</td>\n",
       "      <td>March 9, 2016</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>96 min</td>\n",
       "      <td>Dramas, International Movies, Thrillers</td>\n",
       "      <td>Recovering alcoholic Talal wakes up inside a s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5329</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher!!!</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5330</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer!!!</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5331</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt!!!</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5332</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh!!!</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5332 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Type                          Title                Director  \\\n",
       "Show ID                                                                   \n",
       "1          Movie                        Sankofa         Haile Gerima!!!   \n",
       "2        TV Show  The Great British Baking Show      Andy Devonshire!!!   \n",
       "3          Movie                   The Starling       Theodore Melfi!!!   \n",
       "4          Movie                   Je Suis Karl  Christian Schwochow!!!   \n",
       "5          Movie                          Jeans           S. Shankar!!!   \n",
       "...          ...                            ...                     ...   \n",
       "5328       Movie                        Zinzana      Majid Al Ansari!!!   \n",
       "5329       Movie                         Zodiac        David Fincher!!!   \n",
       "5330       Movie                     Zombieland      Ruben Fleischer!!!   \n",
       "5331       Movie                           Zoom         Peter Hewitt!!!   \n",
       "5332       Movie                         Zubaan          Mozez Singh!!!   \n",
       "\n",
       "                                                      Cast  \\\n",
       "Show ID                                                      \n",
       "1        Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...   \n",
       "2        Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...   \n",
       "3        Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...   \n",
       "4        Luna Wedler, Jannis Niewöhner, Milan Peschel, ...   \n",
       "5        Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...   \n",
       "...                                                    ...   \n",
       "5328     Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...   \n",
       "5329     Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...   \n",
       "5330     Jesse Eisenberg, Woody Harrelson, Emma Stone, ...   \n",
       "5331     Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...   \n",
       "5332     Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...   \n",
       "\n",
       "                                                   Country  \\\n",
       "Show ID                                                      \n",
       "1        United States, Ghana, Burkina Faso, United Kin...   \n",
       "2                                           United Kingdom   \n",
       "3                                            United States   \n",
       "4                                  Germany, Czech Republic   \n",
       "5                                                    India   \n",
       "...                                                    ...   \n",
       "5328                          United Arab Emirates, Jordan   \n",
       "5329                                         United States   \n",
       "5330                                         United States   \n",
       "5331                                         United States   \n",
       "5332                                                 India   \n",
       "\n",
       "                 Date_added  Release_year Rating   Duration  \\\n",
       "Show ID                                                       \n",
       "1        September 24, 2021          1993  TV-MA    125 min   \n",
       "2        September 24, 2021          2021  TV-14  9 Seasons   \n",
       "3        September 24, 2021          2021  PG-13    104 min   \n",
       "4        September 23, 2021          2021  TV-MA    127 min   \n",
       "5        September 21, 2021          1998  TV-14    166 min   \n",
       "...                     ...           ...    ...        ...   \n",
       "5328          March 9, 2016          2015  TV-MA     96 min   \n",
       "5329      November 20, 2019          2007      R    158 min   \n",
       "5330       November 1, 2019          2009      R     88 min   \n",
       "5331       January 11, 2020          2006     PG     88 min   \n",
       "5332          March 2, 2019          2015  TV-14    111 min   \n",
       "\n",
       "                                                Listed_in  \\\n",
       "Show ID                                                     \n",
       "1        Dramas, Independent Movies, International Movies   \n",
       "2                            British TV Shows, Reality TV   \n",
       "3                                        Comedies, Dramas   \n",
       "4                            Dramas, International Movies   \n",
       "5         Comedies, International Movies, Romantic Movies   \n",
       "...                                                   ...   \n",
       "5328              Dramas, International Movies, Thrillers   \n",
       "5329                       Cult Movies, Dramas, Thrillers   \n",
       "5330                              Comedies, Horror Movies   \n",
       "5331                   Children & Family Movies, Comedies   \n",
       "5332       Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                               Description  \n",
       "Show ID                                                     \n",
       "1        On a photo shoot in Ghana, an American model s...  \n",
       "2        A talented batch of amateur bakers face off in...  \n",
       "3        A woman adjusting to life after a loss contend...  \n",
       "4        After most of her family is murdered in a terr...  \n",
       "5        When the father of the man she loves insists t...  \n",
       "...                                                    ...  \n",
       "5328     Recovering alcoholic Talal wakes up inside a s...  \n",
       "5329     A political cartoonist, a crime reporter and a...  \n",
       "5330     Looking to survive in a world taken over by zo...  \n",
       "5331     Dragged from civilian life, a former superhero...  \n",
       "5332     A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[5332 rows x 11 columns]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset.columns = [\"Type\", \"Title\", \"Director\", \"Cast\", \"Country\", \"Date_added\", \"Release_year\", \"Rating\", \"Duration\", \"Listed_in\", \"Description\"]\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q5</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q5 results: All test cases passed!"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q5\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 6 :** As you can see there are still some inconsistencies in our data such as in the column of `Director` we have each entry ending with exclamation marks (!!!).<br/>Write a piece of code that would remove the exclamations at the end of each entry in the column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "import re\n",
    "def checkQ6(column):\n",
    "    match = \"!!!\"\n",
    "    passed = True\n",
    "    for i in range(len(column)):\n",
    "        if len(re.findall(match,column[i])) != 0:\n",
    "            passed = False\n",
    "            return passed\n",
    "    return passed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Title</th>\n",
       "      <th>Director</th>\n",
       "      <th>Cast</th>\n",
       "      <th>Country</th>\n",
       "      <th>Date_added</th>\n",
       "      <th>Release_year</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Duration</th>\n",
       "      <th>Listed_in</th>\n",
       "      <th>Description</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Show ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Sankofa</td>\n",
       "      <td>Haile Gerima</td>\n",
       "      <td>Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...</td>\n",
       "      <td>United States, Ghana, Burkina Faso, United Kin...</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>1993</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>125 min</td>\n",
       "      <td>Dramas, Independent Movies, International Movies</td>\n",
       "      <td>On a photo shoot in Ghana, an American model s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>The Great British Baking Show</td>\n",
       "      <td>Andy Devonshire</td>\n",
       "      <td>Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>9 Seasons</td>\n",
       "      <td>British TV Shows, Reality TV</td>\n",
       "      <td>A talented batch of amateur bakers face off in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Movie</td>\n",
       "      <td>The Starling</td>\n",
       "      <td>Theodore Melfi</td>\n",
       "      <td>Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...</td>\n",
       "      <td>United States</td>\n",
       "      <td>September 24, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>104 min</td>\n",
       "      <td>Comedies, Dramas</td>\n",
       "      <td>A woman adjusting to life after a loss contend...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Je Suis Karl</td>\n",
       "      <td>Christian Schwochow</td>\n",
       "      <td>Luna Wedler, Jannis Niewöhner, Milan Peschel, ...</td>\n",
       "      <td>Germany, Czech Republic</td>\n",
       "      <td>September 23, 2021</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>127 min</td>\n",
       "      <td>Dramas, International Movies</td>\n",
       "      <td>After most of her family is murdered in a terr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Jeans</td>\n",
       "      <td>S. Shankar</td>\n",
       "      <td>Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...</td>\n",
       "      <td>India</td>\n",
       "      <td>September 21, 2021</td>\n",
       "      <td>1998</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>166 min</td>\n",
       "      <td>Comedies, International Movies, Romantic Movies</td>\n",
       "      <td>When the father of the man she loves insists t...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5328</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zinzana</td>\n",
       "      <td>Majid Al Ansari</td>\n",
       "      <td>Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...</td>\n",
       "      <td>United Arab Emirates, Jordan</td>\n",
       "      <td>March 9, 2016</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>96 min</td>\n",
       "      <td>Dramas, International Movies, Thrillers</td>\n",
       "      <td>Recovering alcoholic Talal wakes up inside a s...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5329</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 20, 2019</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5330</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>November 1, 2019</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5331</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>January 11, 2020</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5332</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>March 2, 2019</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5332 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Type                          Title             Director  \\\n",
       "Show ID                                                                \n",
       "1          Movie                        Sankofa         Haile Gerima   \n",
       "2        TV Show  The Great British Baking Show      Andy Devonshire   \n",
       "3          Movie                   The Starling       Theodore Melfi   \n",
       "4          Movie                   Je Suis Karl  Christian Schwochow   \n",
       "5          Movie                          Jeans           S. Shankar   \n",
       "...          ...                            ...                  ...   \n",
       "5328       Movie                        Zinzana      Majid Al Ansari   \n",
       "5329       Movie                         Zodiac        David Fincher   \n",
       "5330       Movie                     Zombieland      Ruben Fleischer   \n",
       "5331       Movie                           Zoom         Peter Hewitt   \n",
       "5332       Movie                         Zubaan          Mozez Singh   \n",
       "\n",
       "                                                      Cast  \\\n",
       "Show ID                                                      \n",
       "1        Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...   \n",
       "2        Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...   \n",
       "3        Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...   \n",
       "4        Luna Wedler, Jannis Niewöhner, Milan Peschel, ...   \n",
       "5        Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...   \n",
       "...                                                    ...   \n",
       "5328     Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...   \n",
       "5329     Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...   \n",
       "5330     Jesse Eisenberg, Woody Harrelson, Emma Stone, ...   \n",
       "5331     Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...   \n",
       "5332     Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...   \n",
       "\n",
       "                                                   Country  \\\n",
       "Show ID                                                      \n",
       "1        United States, Ghana, Burkina Faso, United Kin...   \n",
       "2                                           United Kingdom   \n",
       "3                                            United States   \n",
       "4                                  Germany, Czech Republic   \n",
       "5                                                    India   \n",
       "...                                                    ...   \n",
       "5328                          United Arab Emirates, Jordan   \n",
       "5329                                         United States   \n",
       "5330                                         United States   \n",
       "5331                                         United States   \n",
       "5332                                                 India   \n",
       "\n",
       "                 Date_added  Release_year Rating   Duration  \\\n",
       "Show ID                                                       \n",
       "1        September 24, 2021          1993  TV-MA    125 min   \n",
       "2        September 24, 2021          2021  TV-14  9 Seasons   \n",
       "3        September 24, 2021          2021  PG-13    104 min   \n",
       "4        September 23, 2021          2021  TV-MA    127 min   \n",
       "5        September 21, 2021          1998  TV-14    166 min   \n",
       "...                     ...           ...    ...        ...   \n",
       "5328          March 9, 2016          2015  TV-MA     96 min   \n",
       "5329      November 20, 2019          2007      R    158 min   \n",
       "5330       November 1, 2019          2009      R     88 min   \n",
       "5331       January 11, 2020          2006     PG     88 min   \n",
       "5332          March 2, 2019          2015  TV-14    111 min   \n",
       "\n",
       "                                                Listed_in  \\\n",
       "Show ID                                                     \n",
       "1        Dramas, Independent Movies, International Movies   \n",
       "2                            British TV Shows, Reality TV   \n",
       "3                                        Comedies, Dramas   \n",
       "4                            Dramas, International Movies   \n",
       "5         Comedies, International Movies, Romantic Movies   \n",
       "...                                                   ...   \n",
       "5328              Dramas, International Movies, Thrillers   \n",
       "5329                       Cult Movies, Dramas, Thrillers   \n",
       "5330                              Comedies, Horror Movies   \n",
       "5331                   Children & Family Movies, Comedies   \n",
       "5332       Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                               Description  \n",
       "Show ID                                                     \n",
       "1        On a photo shoot in Ghana, an American model s...  \n",
       "2        A talented batch of amateur bakers face off in...  \n",
       "3        A woman adjusting to life after a loss contend...  \n",
       "4        After most of her family is murdered in a terr...  \n",
       "5        When the father of the man she loves insists t...  \n",
       "...                                                    ...  \n",
       "5328     Recovering alcoholic Talal wakes up inside a s...  \n",
       "5329     A political cartoonist, a crime reporter and a...  \n",
       "5330     Looking to survive in a world taken over by zo...  \n",
       "5331     Dragged from civilian life, a former superhero...  \n",
       "5332     A scrappy but poor boy worms his way into a ty...  \n",
       "\n",
       "[5332 rows x 11 columns]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset[\"Director\"] = netflixDataset[\"Director\"].str.replace(\"!!!\", \"\")\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Q6 passed\n"
     ]
    }
   ],
   "source": [
    "#Do not change the code in this cell\n",
    "Q6Answer = checkQ6(list(netflixDataset['Director']))\n",
    "if Q6Answer:\n",
    "    print(\"Q6 passed\")\n",
    "else:\n",
    "    print(\"Q6 failed\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 7 :** As you can see that the column `Date_added` has entries in the format (month date, year).<br/>You are to split the column into two different columns such as now one column would contain the `month date` (part) & one would contain the `year` (part). <br/>Rename the new colunmns formed as `Added_year` & `Added_date` which would signify the year & the date in which the entry was made into the dataset above. <br/>\n",
    "<b>Note: </b> After doing the above mentioned operation remember to drop the `Date_added` column in the dataset as it would now be redundant."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type</th>\n",
       "      <th>Title</th>\n",
       "      <th>Director</th>\n",
       "      <th>Cast</th>\n",
       "      <th>Country</th>\n",
       "      <th>Release_year</th>\n",
       "      <th>Rating</th>\n",
       "      <th>Duration</th>\n",
       "      <th>Listed_in</th>\n",
       "      <th>Description</th>\n",
       "      <th>Added_date</th>\n",
       "      <th>Added_year</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Show ID</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Sankofa</td>\n",
       "      <td>Haile Gerima</td>\n",
       "      <td>Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...</td>\n",
       "      <td>United States, Ghana, Burkina Faso, United Kin...</td>\n",
       "      <td>1993</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>125 min</td>\n",
       "      <td>Dramas, Independent Movies, International Movies</td>\n",
       "      <td>On a photo shoot in Ghana, an American model s...</td>\n",
       "      <td>September 24</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>TV Show</td>\n",
       "      <td>The Great British Baking Show</td>\n",
       "      <td>Andy Devonshire</td>\n",
       "      <td>Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...</td>\n",
       "      <td>United Kingdom</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>9 Seasons</td>\n",
       "      <td>British TV Shows, Reality TV</td>\n",
       "      <td>A talented batch of amateur bakers face off in...</td>\n",
       "      <td>September 24</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Movie</td>\n",
       "      <td>The Starling</td>\n",
       "      <td>Theodore Melfi</td>\n",
       "      <td>Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2021</td>\n",
       "      <td>PG-13</td>\n",
       "      <td>104 min</td>\n",
       "      <td>Comedies, Dramas</td>\n",
       "      <td>A woman adjusting to life after a loss contend...</td>\n",
       "      <td>September 24</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Je Suis Karl</td>\n",
       "      <td>Christian Schwochow</td>\n",
       "      <td>Luna Wedler, Jannis Niewöhner, Milan Peschel, ...</td>\n",
       "      <td>Germany, Czech Republic</td>\n",
       "      <td>2021</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>127 min</td>\n",
       "      <td>Dramas, International Movies</td>\n",
       "      <td>After most of her family is murdered in a terr...</td>\n",
       "      <td>September 23</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Jeans</td>\n",
       "      <td>S. Shankar</td>\n",
       "      <td>Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...</td>\n",
       "      <td>India</td>\n",
       "      <td>1998</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>166 min</td>\n",
       "      <td>Comedies, International Movies, Romantic Movies</td>\n",
       "      <td>When the father of the man she loves insists t...</td>\n",
       "      <td>September 21</td>\n",
       "      <td>2021</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5328</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zinzana</td>\n",
       "      <td>Majid Al Ansari</td>\n",
       "      <td>Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...</td>\n",
       "      <td>United Arab Emirates, Jordan</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-MA</td>\n",
       "      <td>96 min</td>\n",
       "      <td>Dramas, International Movies, Thrillers</td>\n",
       "      <td>Recovering alcoholic Talal wakes up inside a s...</td>\n",
       "      <td>March 9</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5329</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zodiac</td>\n",
       "      <td>David Fincher</td>\n",
       "      <td>Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2007</td>\n",
       "      <td>R</td>\n",
       "      <td>158 min</td>\n",
       "      <td>Cult Movies, Dramas, Thrillers</td>\n",
       "      <td>A political cartoonist, a crime reporter and a...</td>\n",
       "      <td>November 20</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5330</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zombieland</td>\n",
       "      <td>Ruben Fleischer</td>\n",
       "      <td>Jesse Eisenberg, Woody Harrelson, Emma Stone, ...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2009</td>\n",
       "      <td>R</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Comedies, Horror Movies</td>\n",
       "      <td>Looking to survive in a world taken over by zo...</td>\n",
       "      <td>November 1</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5331</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zoom</td>\n",
       "      <td>Peter Hewitt</td>\n",
       "      <td>Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...</td>\n",
       "      <td>United States</td>\n",
       "      <td>2006</td>\n",
       "      <td>PG</td>\n",
       "      <td>88 min</td>\n",
       "      <td>Children &amp; Family Movies, Comedies</td>\n",
       "      <td>Dragged from civilian life, a former superhero...</td>\n",
       "      <td>January 11</td>\n",
       "      <td>2020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5332</th>\n",
       "      <td>Movie</td>\n",
       "      <td>Zubaan</td>\n",
       "      <td>Mozez Singh</td>\n",
       "      <td>Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...</td>\n",
       "      <td>India</td>\n",
       "      <td>2015</td>\n",
       "      <td>TV-14</td>\n",
       "      <td>111 min</td>\n",
       "      <td>Dramas, International Movies, Music &amp; Musicals</td>\n",
       "      <td>A scrappy but poor boy worms his way into a ty...</td>\n",
       "      <td>March 2</td>\n",
       "      <td>2019</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5332 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "            Type                          Title             Director  \\\n",
       "Show ID                                                                \n",
       "1          Movie                        Sankofa         Haile Gerima   \n",
       "2        TV Show  The Great British Baking Show      Andy Devonshire   \n",
       "3          Movie                   The Starling       Theodore Melfi   \n",
       "4          Movie                   Je Suis Karl  Christian Schwochow   \n",
       "5          Movie                          Jeans           S. Shankar   \n",
       "...          ...                            ...                  ...   \n",
       "5328       Movie                        Zinzana      Majid Al Ansari   \n",
       "5329       Movie                         Zodiac        David Fincher   \n",
       "5330       Movie                     Zombieland      Ruben Fleischer   \n",
       "5331       Movie                           Zoom         Peter Hewitt   \n",
       "5332       Movie                         Zubaan          Mozez Singh   \n",
       "\n",
       "                                                      Cast  \\\n",
       "Show ID                                                      \n",
       "1        Kofi Ghanaba, Oyafunmike Ogunlano, Alexandra D...   \n",
       "2        Mel Giedroyc, Sue Perkins, Mary Berry, Paul Ho...   \n",
       "3        Melissa McCarthy, Chris O'Dowd, Kevin Kline, T...   \n",
       "4        Luna Wedler, Jannis Niewöhner, Milan Peschel, ...   \n",
       "5        Prashanth, Aishwarya Rai Bachchan, Sri Lakshmi...   \n",
       "...                                                    ...   \n",
       "5328     Ali Suliman, Saleh Bakri, Yasa, Ali Al-Jabri, ...   \n",
       "5329     Mark Ruffalo, Jake Gyllenhaal, Robert Downey J...   \n",
       "5330     Jesse Eisenberg, Woody Harrelson, Emma Stone, ...   \n",
       "5331     Tim Allen, Courteney Cox, Chevy Chase, Kate Ma...   \n",
       "5332     Vicky Kaushal, Sarah-Jane Dias, Raaghav Chanan...   \n",
       "\n",
       "                                                   Country  Release_year  \\\n",
       "Show ID                                                                    \n",
       "1        United States, Ghana, Burkina Faso, United Kin...          1993   \n",
       "2                                           United Kingdom          2021   \n",
       "3                                            United States          2021   \n",
       "4                                  Germany, Czech Republic          2021   \n",
       "5                                                    India          1998   \n",
       "...                                                    ...           ...   \n",
       "5328                          United Arab Emirates, Jordan          2015   \n",
       "5329                                         United States          2007   \n",
       "5330                                         United States          2009   \n",
       "5331                                         United States          2006   \n",
       "5332                                                 India          2015   \n",
       "\n",
       "        Rating   Duration                                         Listed_in  \\\n",
       "Show ID                                                                       \n",
       "1        TV-MA    125 min  Dramas, Independent Movies, International Movies   \n",
       "2        TV-14  9 Seasons                      British TV Shows, Reality TV   \n",
       "3        PG-13    104 min                                  Comedies, Dramas   \n",
       "4        TV-MA    127 min                      Dramas, International Movies   \n",
       "5        TV-14    166 min   Comedies, International Movies, Romantic Movies   \n",
       "...        ...        ...                                               ...   \n",
       "5328     TV-MA     96 min           Dramas, International Movies, Thrillers   \n",
       "5329         R    158 min                    Cult Movies, Dramas, Thrillers   \n",
       "5330         R     88 min                           Comedies, Horror Movies   \n",
       "5331        PG     88 min                Children & Family Movies, Comedies   \n",
       "5332     TV-14    111 min    Dramas, International Movies, Music & Musicals   \n",
       "\n",
       "                                               Description    Added_date  \\\n",
       "Show ID                                                                    \n",
       "1        On a photo shoot in Ghana, an American model s...  September 24   \n",
       "2        A talented batch of amateur bakers face off in...  September 24   \n",
       "3        A woman adjusting to life after a loss contend...  September 24   \n",
       "4        After most of her family is murdered in a terr...  September 23   \n",
       "5        When the father of the man she loves insists t...  September 21   \n",
       "...                                                    ...           ...   \n",
       "5328     Recovering alcoholic Talal wakes up inside a s...       March 9   \n",
       "5329     A political cartoonist, a crime reporter and a...   November 20   \n",
       "5330     Looking to survive in a world taken over by zo...    November 1   \n",
       "5331     Dragged from civilian life, a former superhero...    January 11   \n",
       "5332     A scrappy but poor boy worms his way into a ty...       March 2   \n",
       "\n",
       "        Added_year  \n",
       "Show ID             \n",
       "1             2021  \n",
       "2             2021  \n",
       "3             2021  \n",
       "4             2021  \n",
       "5             2021  \n",
       "...            ...  \n",
       "5328          2016  \n",
       "5329          2019  \n",
       "5330          2019  \n",
       "5331          2020  \n",
       "5332          2019  \n",
       "\n",
       "[5332 rows x 12 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixDataset[[\"Added_date\", \"Added_year\"]] = netflixDataset[\"Date_added\"].str.split(\",\", expand=True)\n",
    "netflixDataset.drop(\"Date_added\", axis=1, inplace=True)\n",
    "netflixDataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q7</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q7 results: All test cases passed!"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q7\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 8 :** Now that we are done with cleaning our data lets generate some useful visualizations from it.<br/>You are to analyse if the platform hosts more movies as compared to that of TV shows by the help of suitable visualization.<br/> Also you should justify the visualization you are using in the cell below. Store the count for the number of movies and the number of TV shows inside the variable `numberOfMovies` & `numberOfTvShows` respectively."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0, 0, '5185'), Text(0, 0, '147')]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Your code here\n",
    "numberOfMovies = netflixDataset[\"Type\"].value_counts()[\"Movie\"]\n",
    "numberOfTvShows = netflixDataset[\"Type\"].value_counts()[\"TV Show\"]\n",
    "fig = sns.countplot(x=netflixDataset[\"Type\"])\n",
    "fig.set_xlabel(\"Type\")\n",
    "fig.set_ylabel(\"Count\")\n",
    "fig.set_title(\"Counts per Content Type\")\n",
    "fig.bar_label(fig.containers[0])\n",
    "\n",
    "# I used a bar plot because we had to show the counts for each type of TV show, which is categorical data. Since the discrete values of categorical data had to be visualized and compared, a bar plot was the best option."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q8</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q8 results: All test cases passed!"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q8\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 9 :** Now let us check which country is the one that does most of the content creating but for that we might need some to manipulate the data in some way. Follow the steps below to make a suitable visualization:\n",
    "<ul>\n",
    "<li>Make a dictionary `countries` that stores the counts of how much times a country appears corresponding to a movie or a Tv show. </li>\n",
    "<li>Remember that you would have to split the strings in the column as multiple countries might be collaborating to make a movie or a Tv show. </li>\n",
    "<li>Use the dictonary and the respective counts to make a plot that will show us that which country creates the most content that is hosted by netflix </li>\n",
    "</ul>\n",
    "<b>Note: </b>Be mindful of the extra spaces that you will get while splitting the data so you would have to get rid of any extra spaces that you will get in the process. <br/>\n",
    "The helpful functions that you can use are str.replace(), str.rstrip(), str.strip() & str.lstrip().\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10]),\n",
       " [Text(0, 0, 'UnitedStates'),\n",
       "  Text(1, 0, 'India'),\n",
       "  Text(2, 0, 'UnitedKingdom'),\n",
       "  Text(3, 0, 'Canada'),\n",
       "  Text(4, 0, 'France'),\n",
       "  Text(5, 0, 'Germany'),\n",
       "  Text(6, 0, 'Spain'),\n",
       "  Text(7, 0, 'Japan'),\n",
       "  Text(8, 0, 'China'),\n",
       "  Text(9, 0, 'Mexico'),\n",
       "  Text(10, 0, 'Egypt')])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Your code here\n",
    "countries = {}\n",
    "country_series = netflixDataset[\"Country\"].str.split(\",\")\n",
    "for country_list in country_series:\n",
    "    country_list = [country.strip().replace(\" \", \"\") for country in country_list]\n",
    "    for country in country_list:\n",
    "        if country == \"\":\n",
    "            continue\n",
    "        try:\n",
    "            countries[country] += 1\n",
    "        except KeyError:\n",
    "            countries[country] = 1\n",
    "            \n",
    "sorted_countries = sorted(countries.items(), reverse=True , key=lambda kv:(kv[1], kv[0]))\n",
    "sorted_countries = sorted_countries[:11]\n",
    "\n",
    "sorted_countries_dict = {}\n",
    "for country in sorted_countries:\n",
    "    sorted_countries_dict[country[0]] = country[1]\n",
    "            \n",
    "# Plotting\n",
    "# For plotting, I'm only considering the top 10 most content-creating countries since there's a lot of countries to display and most of them have 0 content created. Similar to question 8, a bar plot is also used here.\n",
    "fig = sns.barplot(x=list(sorted_countries_dict.keys())[:11], y=list(sorted_countries_dict.values())[:11])\n",
    "fig.set_xlabel(\"Country\")\n",
    "fig.set_ylabel(\"Count\")\n",
    "fig.set_title(\"Count of Content Created per Country\")\n",
    "fig.bar_label(fig.containers[0])\n",
    "plt.tight_layout()\n",
    "plt.xticks(rotation=90)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q9</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q9 results: All test cases passed!"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q9\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 10 :** Now we will analyse the duration of movies and check what is the optimal value for a standard movie on the platform of netflix.<br/>You have studied about kde plots in the lectures of EDA so make a suitable kde plot to visualize and report the most probable duration of movies hosted on the platform. Remember to filter the dataset such that you only have movies in it. <br/>Store the resultant df in the variable `netflixMovies`. Also you would have to convert the strings in the `Duration` column to integers before plotting them using a kde plot."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'KDE of Movie Durations')"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixMovies = netflixDataset[netflixDataset[\"Type\"] == \"Movie\"]\n",
    "durations = netflixMovies[\"Duration\"].str.replace(\" min\", \"\").astype(int)\n",
    "sns.set_theme()\n",
    "fig = sns.kdeplot(durations, shade=True)\n",
    "fig.set_title(\"KDE of Movie Durations\")\n",
    "# The highest density is assigned to Duration that's around 100 minutes, so that's the most optimal duration for Movies."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q10</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q10 results: All test cases passed!"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q10\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 11 :** Repeat the same steps as done in Q9 for TV shows present in our `netflixDataset`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/site-packages/ipykernel_launcher.py:3: FutureWarning: The default value of regex will change from True to False in a future version.\n",
      "  This is separate from the ipykernel package so we can avoid doing imports until\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'KDE of TV Show Durations')"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Your code here\n",
    "netflixTvShows = netflixDataset[netflixDataset[\"Type\"] == \"TV Show\"]\n",
    "durations = netflixTvShows[\"Duration\"].str.replace(r\" Seasons*\", \"\").astype(int)\n",
    "fig = sns.kdeplot(durations, shade=True)\n",
    "fig.set_title(\"KDE of TV Show Durations\")\n",
    "# The highest density is assigned to Duration that's around 1.25 Seasons, so that's the most optimal duration for TV Shows."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q11</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q11 results: All test cases passed!"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q11\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 12 :** Lets now categorise and see which type of ratings is watched the most by people using netflix with the help of a suitable visualization. Make use of the variable `netflixMovies` and a plot to ellaborate on your findings. Also you are to store the most watched movie rating inside the variable `mostWatchedMovieRating`. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Views of Movies per Rating Type')"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Your code here\n",
    "movieRatingCounts = netflixMovies[\"Rating\"].value_counts() # Stores the views of different movie ratings\n",
    "mostWatchedMovieRating = movieRatingCounts.index[0]\n",
    "fig = sns.barplot(x=movieRatingCounts.index, y=movieRatingCounts)\n",
    "plt.xticks(rotation = 90) # This is done so that the x-axis labels are angled so we can distinguish them\n",
    "fig.set_xlabel(\"Movie Rating Type\")\n",
    "fig.set_ylabel(\"Views\")\n",
    "fig.set_title(\"Views of Movies per Rating Type\")\n",
    "\n",
    "# As can be seen from the barplot, the most watched movie rating type is TV-MA, with 1741 views, as it has the bar with the most height."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q12</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q12 results: All test cases passed!"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q12\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 13 :** Do the same for the TV shows that are offered by netflix and then report the most watched TV show rating in the variable `mostWatchedTvRating`. You are to also include the visualization as made in Q11."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.7/site-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variables as keyword args: x, y. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
      "  FutureWarning\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Views of TV Shows per Rating Type')"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Your code here\n",
    "tvShowRatingCounts = netflixTvShows[\"Rating\"].value_counts() # Stores the views of different movie ratings\n",
    "mostWatchedTvRating = tvShowRatingCounts.index[0]\n",
    "fig = sns.barplot(tvShowRatingCounts.index, tvShowRatingCounts)\n",
    "plt.xticks(rotation = 90) # This is done so that the x-axis labels are angled so we can distinguish them\n",
    "fig.set_xlabel(\"TV Show Rating Type\")\n",
    "fig.set_ylabel(\"Views\")\n",
    "fig.set_title(\"Views of TV Shows per Rating Type\")\n",
    "\n",
    "# As can be seen from the barplot, the most watched TV show rating type is also TV-MA, with 81 views, as it has the bar with the most height."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<p><strong><pre style='display: inline;'>Q13</pre></strong> passed!</p>"
      ],
      "text/plain": [
       "Q13 results: All test cases passed!"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grader.check(\"Q13\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Question 14 :** What other meaningful insights could you have extracted from this dataset apart from what you did in this assignment? Also, comment on the quality of data available and give suggestions on how the data could have been better.\n",
    "\n",
    "*Answering Guidelines:* \n",
    "* a placeholder for your answer has been made - simply add your answer in the markdown cell below as instructed."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There were quite a few insights that could be gathered from this dataset. A few could be:\n",
    "- Investigating the change in the amount of total content produced every year\n",
    "- Investigating the change in amount of content produced every year for a particular country (such as United States)\n",
    "- An interesting insight which could be extracted is investigating if there's a relationship between movie releases and the release months.\n",
    "\n",
    "Quality of available data:\n",
    "- The data available was of good quality, it was easy to clean, but there was an overpowering of data for the United States which was off-setting/diminishing the results of all the other countries.\n",
    "\n",
    "Making the data better:\n",
    "- Perhaps the average score of a show/movie can also be recorded so we can conduct an investigation into something like duration vs score"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.7.12 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.12"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "7a3d88c904243d2c3f246166597f86d1c0a39f3d97496d1fe394945d0c6d436d"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
